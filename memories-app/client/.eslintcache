[{"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\index.js":"1","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\App.jsx":"2","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Posts.jsx":"3","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\Form.jsx":"4","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\Post.jsx":"5","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\styles.js":"6","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\styles.js":"7","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\styles.js":"8","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\index.js":"10","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\posts.js":"11","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\posts.js":"12","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\api\\index.js":"13","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\constants\\actionType.js":"14","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\users.js":"15","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\users.js":"16","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Register.jsx":"17","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\NavBar.jsx":"18","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\styles.js":"19","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Home\\Home.jsx":"20","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\style.js":"21","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Input.jsx":"22","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\errors.js":"23","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\errors.js":"24","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Login.jsx":"25","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\helpers\\history.js":"26","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\PrivateRoute\\PrivateRoute.jsx":"27"},{"size":559,"mtime":1612906853131,"results":"28","hashOfConfig":"29"},{"size":762,"mtime":1612906891686,"results":"30","hashOfConfig":"29"},{"size":874,"mtime":1612815964295,"results":"31","hashOfConfig":"29"},{"size":4853,"mtime":1613149179499,"results":"32","hashOfConfig":"29"},{"size":2707,"mtime":1613149327572,"results":"33","hashOfConfig":"29"},{"size":512,"mtime":1611937405311,"results":"34","hashOfConfig":"29"},{"size":447,"mtime":1611935515247,"results":"35","hashOfConfig":"29"},{"size":278,"mtime":1611935515250,"results":"36","hashOfConfig":"29"},{"size":1013,"mtime":1611935515249,"results":"37","hashOfConfig":"29"},{"size":204,"mtime":1612546485741,"results":"38","hashOfConfig":"29"},{"size":615,"mtime":1612908593168,"results":"39","hashOfConfig":"29"},{"size":1362,"mtime":1613029685166,"results":"40","hashOfConfig":"29"},{"size":782,"mtime":1612906816372,"results":"41","hashOfConfig":"29"},{"size":138,"mtime":1611937657999,"results":"42","hashOfConfig":"29"},{"size":609,"mtime":1612907652413,"results":"43","hashOfConfig":"29"},{"size":739,"mtime":1612907457098,"results":"44","hashOfConfig":"29"},{"size":3676,"mtime":1612786946458,"results":"45","hashOfConfig":"29"},{"size":2108,"mtime":1613148533140,"results":"46","hashOfConfig":"29"},{"size":952,"mtime":1612191566860,"results":"47","hashOfConfig":"29"},{"size":1190,"mtime":1612192781228,"results":"48","hashOfConfig":"29"},{"size":630,"mtime":1612360929714,"results":"49","hashOfConfig":"29"},{"size":671,"mtime":1612362675551,"results":"50","hashOfConfig":"29"},{"size":508,"mtime":1612552094279,"results":"51","hashOfConfig":"29"},{"size":325,"mtime":1612550963715,"results":"52","hashOfConfig":"29"},{"size":2940,"mtime":1612907272229,"results":"53","hashOfConfig":"29"},{"size":97,"mtime":1612783509442,"results":"54","hashOfConfig":"29"},{"size":378,"mtime":1612783999910,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"182xho2",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\index.js",["119"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nimport App from './App.jsx';\r\nimport './index.css';\r\nconst store = createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>,\r\n     document.getElementById('app')\r\n);",["120","121"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\App.jsx",["122"],"import React from 'react';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Home from './components/Home/Home';\r\nimport {Container} from '@material-ui/core'\r\nimport {BrowserRouter, Switch, Route,Router} from 'react-router-dom'\r\nimport Register from './components/Auth/Register';\r\nimport Login from './components/Auth/Login';\r\n const App = () =>{\r\n\r\n\r\n    return(\r\n    <BrowserRouter>\r\n        <Container maxWidth=\"lg\">\r\n            <NavBar/>\r\n            <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path='/auth/register' exact component={Register}/>\r\n            <Route path='/auth/login' exact component={Login}/>\r\n            </Switch>\r\n        </Container>\r\n    </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Posts.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\Form.jsx",["123","124"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\Post.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\posts.js",["125"],"import {FETCH_ALL, DELETE, UPDATE, CREATE} from '../constants/actionType';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (posts = [], action) =>{\r\n    switch(action.type){\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n\r\n        case 'CREATEPOST':\r\n            return [...posts, action.payload]\r\n\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return posts.filter((post)=> post._id!== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n}","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\posts.js",["126"],"import * as api from '../api';\r\nimport {FETCH_ALL, DELETE, UPDATE, CREATE} from '../constants/actionType';\r\n// Action Creators\r\n// Function that dispatches action\r\nexport const getPosts = () => async (dispatch) => {\r\n\r\n\r\n    try {\r\n        const {data} = await api.fetchPosts();\r\n\r\n        dispatch({type: FETCH_ALL, payload: data});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const createPost = (post) => async (dispatch) =>{\r\ntry {\r\n    const { data } = await api.createPost(post);\r\n    console.log(\"AAA\");\r\n    dispatch({type: 'CREATEPOST', payload: data});\r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) =>{\r\n    try {\r\n        const {data} = await api.updatePost(id,post);\r\n        dispatch({type: UPDATE, payload: data})\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) =>{\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({type: DELETE, payload: id})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) =>{\r\n    try {\r\n       const {data} = await api.likePost(id);\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\api\\index.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\constants\\actionType.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\users.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\users.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Register.jsx",["127","128"],"import React, {useState} from 'react';\r\nimport { Button, Typography, Grid, Container, Avatar} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport { login, register} from '../../actions/users';\r\nimport  {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './style';\r\nimport Input from './Input';\r\nimport { clear } from '../../actions/errors';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link } from 'react-router-dom';\r\nconst Register = (props) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [userData] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n\r\n    const validationSchema = yup.object({\r\n      name: yup.string()\r\n        .required('Specify your name!'),\r\n      lastName: yup.string()\r\n          .required('Specify your last name!'),\r\n      username: yup.string()\r\n          .required('Specify your username!'),\r\n      password: yup.string()\r\n          .required('Specify your password!').min(6, \"Minimum 6 characters\")\r\n    });\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: userData.name,\r\n          lastName: userData.lastName,\r\n          username: userData.username,\r\n          password: userData.password\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n           dispatch(register(values));\r\n            \r\n        }\r\n    });\r\n    return(\r\n      <Container maxWidth=\"xs\">\r\n    <div className={classes.paper}> \r\n      <Avatar className={classes.avatar}>\r\n                          <LockOutlinedIcon/>\r\n        </Avatar>\r\n         <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n         </Typography>\r\n         {props.error && <Alert severity={props.error.type}>{props.error.message}</Alert> }\r\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Input type='name' name=\"name\" label=\"Your first name\" handleOnChange={formik.handleChange} value={formik.values.name} error={formik.touched.name && Boolean(formik.errors.name)} helperText={formik.touched.name && formik.errors.name} half/>\r\n            <Input type='name' name=\"lastName\" label=\"Your last name\" handleOnChange={formik.handleChange} value={formik.values.lastName} error={formik.touched.lastName && Boolean(formik.errors.lastName)} helperText={formik.touched.lastName && formik.errors.lastName}  half/>\r\n            <Input type='username' name=\"username\" label=\"Your username\" handleOnChange={formik.handleChange} value={formik.values.username} error={formik.touched.username && Boolean(formik.errors.username)} helperText={formik.touched.username && formik.errors.username} />\r\n            <Input type='password' name=\"password\" label=\"Your password\" handleOnChange={formik.handleChange} value={formik.values.password} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password} />\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n               <Button component={Link} to=\"/auth/login\">ALREADY HAVE AN ACCOUNT? LOGIN</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Register;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\NavBar.jsx",["129","130","131"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Home\\Home.jsx",["132","133"],"import React,{useEffect, useState} from 'react';\r\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\nimport useStyles from '../../styles';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {getPosts} from '../../actions/posts';\r\n\r\nconst Home = () =>{\r\n\r\n    const [currentId, setCurrentId] = useState(null);\r\n     const classes = useStyles();\r\n     const dispatch = useDispatch();\r\n\r\n     useEffect(() =>{\r\n        dispatch(getPosts());\r\n     },[currentId,dispatch]);\r\n    return(\r\n        <Grow in>\r\n                <Container>\r\n                    <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\style.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Input.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\errors.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\errors.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Login.jsx",["134","135"],"import React, {useState} from 'react';\r\nimport { Button, Typography, Grid, Container, Avatar} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport { login, register} from '../../actions/users';\r\nimport  {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './style';\r\nimport Input from './Input';\r\nimport { clear } from '../../actions/errors';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory} from 'react-router-dom';\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [userData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const history = useHistory();\r\n    const validationSchema = yup.object({\r\n      username: yup.string()\r\n          .required('Specify your username!'),\r\n      password: yup.string()\r\n          .required('Specify your password!').min(6, \"Minimum 6 characters\")\r\n    });\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          username: userData.username,\r\n          password: userData.password\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n             dispatch(login(values,history));\r\n            \r\n        }\r\n    });\r\n    return(\r\n      <Container maxWidth=\"xs\">\r\n    <div className={classes.paper}> \r\n      <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n         <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n         </Typography>\r\n         {props.error && <Alert severity={props.error.type}>{props.error.message}</Alert> }\r\n        <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n          <Input type='username' name=\"username\" label=\"Your username\" handleOnChange={formik.handleChange} value={formik.values.username} error={formik.touched.username && Boolean(formik.errors.username)} helperText={formik.touched.username && formik.errors.username} />\r\n          <Input type='password' name=\"password\" label=\"Your password\" handleOnChange={formik.handleChange} value={formik.values.password} error={formik.touched.password && Boolean(formik.errors.password)} helperText={formik.touched.password && formik.errors.password} />\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n               <Button component={Link} to='/auth/register'>DON'T HAVE AN ACCOUNT? REGISTER</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\helpers\\history.js",[],["136","137"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\PrivateRoute\\PrivateRoute.jsx",[],{"ruleId":"138","severity":1,"message":"139","line":5,"column":39,"nodeType":"140","messageId":"141","endLine":5,"endColumn":46},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"138","severity":1,"message":"146","line":5,"column":38,"nodeType":"140","messageId":"141","endLine":5,"endColumn":44},{"ruleId":"138","severity":1,"message":"147","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"148","line":13,"column":7,"nodeType":"140","messageId":"141","endLine":13,"endColumn":11},{"ruleId":"138","severity":1,"message":"149","line":1,"column":36,"nodeType":"140","messageId":"141","endLine":1,"endColumn":42},{"ruleId":"138","severity":1,"message":"149","line":2,"column":36,"nodeType":"140","messageId":"141","endLine":2,"endColumn":42},{"ruleId":"138","severity":1,"message":"150","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":15},{"ruleId":"138","severity":1,"message":"151","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":15},{"ruleId":"138","severity":1,"message":"152","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"153","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":18},{"ruleId":"138","severity":1,"message":"154","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":2,"column":20,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"156","line":2,"column":28,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"157","line":4,"column":17,"nodeType":"140","messageId":"141","endLine":4,"endColumn":25},{"ruleId":"138","severity":1,"message":"151","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":15},{"ruleId":"142","replacedBy":"158"},{"ruleId":"144","replacedBy":"159"},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'Router' is defined but never used.","'Alert' is defined but never used.","'user' is assigned a value but never used.","'CREATE' is defined but never used.","'login' is defined but never used.","'clear' is defined but never used.","'makeStyles' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'register' is defined but never used.",["160"],["161"],"no-global-assign","no-unsafe-negation"]