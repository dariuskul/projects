[{"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\index.js":"1","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\App.jsx":"2","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Posts.jsx":"3","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\Form.jsx":"4","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\Post.jsx":"5","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\styles.js":"6","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\styles.js":"7","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\styles.js":"8","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\index.js":"10","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\posts.js":"11","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\posts.js":"12","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\api\\index.js":"13","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\constants\\actionType.js":"14","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\users.js":"15","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\users.js":"16","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Register.jsx":"17","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\NavBar.jsx":"18","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\styles.js":"19","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Home\\Home.jsx":"20","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\style.js":"21","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Input.jsx":"22","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\errors.js":"23","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\errors.js":"24","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Login.jsx":"25","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\helpers\\history.js":"26","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\PrivateRoute\\PrivateRoute.jsx":"27"},{"size":559,"mtime":1612906853131,"results":"28","hashOfConfig":"29"},{"size":757,"mtime":1613177031285,"results":"30","hashOfConfig":"29"},{"size":874,"mtime":1612815964295,"results":"31","hashOfConfig":"29"},{"size":4850,"mtime":1613176957303,"results":"32","hashOfConfig":"29"},{"size":2708,"mtime":1613155938546,"results":"33","hashOfConfig":"29"},{"size":512,"mtime":1611937405311,"results":"34","hashOfConfig":"29"},{"size":447,"mtime":1611935515247,"results":"35","hashOfConfig":"29"},{"size":278,"mtime":1611935515250,"results":"36","hashOfConfig":"29"},{"size":1013,"mtime":1611935515249,"results":"37","hashOfConfig":"29"},{"size":204,"mtime":1612546485741,"results":"38","hashOfConfig":"29"},{"size":615,"mtime":1612908593168,"results":"39","hashOfConfig":"29"},{"size":1339,"mtime":1613176896554,"results":"40","hashOfConfig":"29"},{"size":782,"mtime":1612906816372,"results":"41","hashOfConfig":"29"},{"size":338,"mtime":1613176896554,"results":"42","hashOfConfig":"29"},{"size":608,"mtime":1613153533082,"results":"43","hashOfConfig":"29"},{"size":1013,"mtime":1613237661369,"results":"44","hashOfConfig":"29"},{"size":4100,"mtime":1613175970672,"results":"45","hashOfConfig":"29"},{"size":2238,"mtime":1613238188329,"results":"46","hashOfConfig":"29"},{"size":995,"mtime":1613153092614,"results":"47","hashOfConfig":"29"},{"size":1190,"mtime":1612192781228,"results":"48","hashOfConfig":"29"},{"size":630,"mtime":1612360929714,"results":"49","hashOfConfig":"29"},{"size":671,"mtime":1612362675551,"results":"50","hashOfConfig":"29"},{"size":506,"mtime":1613176176649,"results":"51","hashOfConfig":"29"},{"size":391,"mtime":1613176768755,"results":"52","hashOfConfig":"29"},{"size":3375,"mtime":1613238460326,"results":"53","hashOfConfig":"29"},{"size":97,"mtime":1612783509442,"results":"54","hashOfConfig":"29"},{"size":378,"mtime":1612783999910,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"182xho2",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\index.js",["117"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nimport App from './App.jsx';\r\nimport './index.css';\r\nconst store = createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>,\r\n     document.getElementById('app')\r\n);",["118","119"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\App.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Posts.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\Form.jsx",["120"],"import React, {useState, useEffect} from 'react';\r\nimport useStyles from './styles';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport {useDispatch} from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport {useSelector} from 'react-redux';\r\nimport  {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport noob from '../../images/noob.png';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst Form = ({currentId, setCurrentId}) => {\r\n\r\n    const classes = useStyles();\r\n    const [postData,setData] = useState({\r\n        title: '',\r\n        tags: '',\r\n        selectedFile: noob,\r\n        message: '',\r\n    });\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(post){\r\n            formik.setValues(post);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[post])\r\n\r\n\r\n    const validationSchema = yup.object({\r\n        title: yup.string()\r\n            .required('Specify title for your memory!'),\r\n        message: yup.string()\r\n            .required('Write something about your memory!'),\r\n        selectedFile: yup.mixed()\r\n            .required('Your memory photo!')\r\n      });\r\n\r\n      const clear = () =>{\r\n          setCurrentId(null)\r\n          setData({\r\n            title: '',\r\n            tags: '',\r\n            selectedFile: noob,\r\n            message: '',\r\n          })\r\n      }\r\n\r\n      \r\n\r\n\r\n        const formik = useFormik({\r\n          initialValues: {\r\n            creator: postData.creator,\r\n            title: postData.title,\r\n            message: postData.message,\r\n            tags: postData.tags,\r\n            selectedFile: postData.selectedFile\r\n          },\r\n          validationSchema: validationSchema,\r\n          onSubmit: (values, {resetForm}) => {\r\n            if(currentId){\r\n                dispatch(updatePost(currentId,values));\r\n                clear();\r\n                resetForm();\r\n            }\r\n            else{\r\n                dispatch(createPost({...values, creator: user?.result?._id, name: user?.result?.name, createdAt: new Date().toISOString()}));\r\n                resetForm();\r\n            }\r\n          }\r\n        })\r\n\r\n        if(!user?.result){\r\n            return(\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h6\" align=\"center\">\r\n                        To create your own memories, please sign up!\r\n                    </Typography>\r\n                </Paper>\r\n            )\r\n        }\r\n\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={formik.handleSubmit}>\r\n                <Typography variant=\"h6\">{post ? 'Editing' : 'Creating'} Memory</Typography>\r\n                <TextField \r\n                name=\"title\" \r\n                variant=\"outlined\" \r\n                label=\"Title\" \r\n                fullWidth\r\n                value={formik.values.title}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.title && Boolean(formik.errors.title)}\r\n                helperText={formik.touched.title && formik.errors.title}\r\n                />\r\n                <TextField \r\n                name=\"message\" \r\n                variant=\"outlined\" \r\n                label=\"Message\" \r\n                fullWidth\r\n                value={formik.values.message}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.message && Boolean(formik.errors.message)}\r\n                helperText={formik.touched.message && formik.errors.message}\r\n                />\r\n                <TextField \r\n                name=\"tags\" \r\n                variant=\"outlined\" \r\n                label=\"Tags\" \r\n                fullWidth\r\n                value={formik.values.tags}\r\n                onChange={formik.handleChange}\r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase \r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({base64})=> {formik.values.selectedFile= base64}}\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} color=\"primary\" variant=\"contained\" size=\"large\" type=\"submit\" fullWidth>{post? 'Update memory!' : 'Create memory!'}</Button>\r\n                <Button className={classes.buttonSubmit} color=\"secondary\" variant=\"contained\" size=\"small\" type=\"clear\" fullWidth>Clear</Button>\r\n            </form>       \r\n        </Paper>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\Post.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\posts.js",["121"],"import {FETCH_ALL, DELETE, UPDATE, CREATE} from '../constants/actionType';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (posts = [], action) =>{\r\n    switch(action.type){\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n\r\n        case 'CREATEPOST':\r\n            return [...posts, action.payload]\r\n\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case DELETE:\r\n            return posts.filter((post)=> post._id!== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n}","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\posts.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\api\\index.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\constants\\actionType.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\users.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\users.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Register.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\NavBar\\styles.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Home\\Home.jsx",["122","123"],"import React,{useEffect, useState} from 'react';\r\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\r\nimport Posts from '../Posts/Posts';\r\nimport Form from '../Form/Form';\r\nimport useStyles from '../../styles';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {getPosts} from '../../actions/posts';\r\n\r\nconst Home = () =>{\r\n\r\n    const [currentId, setCurrentId] = useState(null);\r\n     const classes = useStyles();\r\n     const dispatch = useDispatch();\r\n\r\n     useEffect(() =>{\r\n        dispatch(getPosts());\r\n     },[currentId,dispatch]);\r\n    return(\r\n        <Grow in>\r\n                <Container>\r\n                    <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\style.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Input.jsx",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\reducers\\errors.js",[],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\actions\\errors.js",[],["124","125"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\Auth\\Login.jsx",["126","127","128"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\helpers\\history.js",[],["129","130"],"C:\\Users\\Darius\\projects\\memories-app\\client\\src\\components\\PrivateRoute\\PrivateRoute.jsx",[],{"ruleId":"131","severity":1,"message":"132","line":5,"column":39,"nodeType":"133","messageId":"134","endLine":5,"endColumn":46},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":12,"column":7,"nodeType":"133","messageId":"134","endLine":12,"endColumn":11},{"ruleId":"131","severity":1,"message":"140","line":1,"column":36,"nodeType":"133","messageId":"134","endLine":1,"endColumn":42},{"ruleId":"131","severity":1,"message":"141","line":2,"column":20,"nodeType":"133","messageId":"134","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"142","line":2,"column":28,"nodeType":"133","messageId":"134","endLine":2,"endColumn":38},{"ruleId":"135","replacedBy":"143"},{"ruleId":"137","replacedBy":"144"},{"ruleId":"131","severity":1,"message":"145","line":2,"column":55,"nodeType":"133","messageId":"134","endLine":2,"endColumn":63},{"ruleId":"131","severity":1,"message":"146","line":21,"column":12,"nodeType":"133","messageId":"134","endLine":21,"endColumn":16},{"ruleId":"131","severity":1,"message":"147","line":21,"column":17,"nodeType":"133","messageId":"134","endLine":21,"endColumn":24},{"ruleId":"135","replacedBy":"148"},{"ruleId":"137","replacedBy":"149"},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'user' is assigned a value but never used.","'CREATE' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.",["150"],["151"],"'Collapse' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.",["150"],["151"],"no-global-assign","no-unsafe-negation"]